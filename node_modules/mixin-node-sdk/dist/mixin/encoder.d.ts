/// <reference types="node" />
import { Aggregated, Input, Output } from '../types';
export declare const magic: Buffer;
export declare const maxEncodingInt = 65535;
export declare const TxVersion = 2;
export declare const OperatorSum = 254;
export declare const OperatorCmp = 255;
export declare class Encoder {
    buf: Buffer;
    constructor(buf: Buffer);
    write(buf: Buffer): void;
    writeBytes(buf: Buffer): void;
    writeInt(i: number): void;
    writeUint64(i: bigint): void;
    writeUint16(i: number): void;
    writeInteger(i: number): void;
    writeSlice(str: Buffer): void;
    writeUUID(id: string): void;
    encodeInput(i: Input): void;
    encodeOutput(o: Output): void;
    encodeAggregatedSignature(js: Aggregated): void;
    encodeSignature(sm: {
        [key: number]: string;
    }): void;
}
