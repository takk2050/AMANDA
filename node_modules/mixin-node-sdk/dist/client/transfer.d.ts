import { AxiosInstance } from 'axios';
import { Keystore, Snapshot, TransactionInput } from '../types';
import { Payment, RawTransaction, TransferClientRequest, TransferInput, WithdrawInput } from '../types/transfer';
export declare class TransferClient implements TransferClientRequest {
    keystore: Keystore;
    request: AxiosInstance;
    verifyPayment(params: TransferInput | TransactionInput): Promise<Payment>;
    transfer(params: TransferInput, pin?: string): Promise<Snapshot>;
    readTransfer(trace_id: string): Promise<Snapshot>;
    transaction(params: TransactionInput, pin?: string): Promise<RawTransaction>;
    sendRawTransaction(raw: string): Promise<{
        hash: string;
    }>;
    withdraw(params: WithdrawInput, pin?: string): Promise<Snapshot>;
}
export declare const verifyPayment: (params: TransactionInput | TransferInput) => Promise<Snapshot[]>;
